name: Build

on: [push, repository_dispatch]

jobs:
  matrix:
    name: Generate Build Matrix
    runs-on: ubuntu-latest

    outputs:
      packages: ${{ steps.matrix.outputs.packages }}

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: cachix/install-nix-action@v13
      with:
        install_url: https://nixos-nix-install-tests.cachix.org/serve/i6laym9jw3wg9mw6ncyrk6gjx4l34vvx/install
        install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
        extra_nix_config: |
          experimental-features = nix-command flakes

    - id: matrix
      run: ./build_matrix.py

  build:
    name: ${{ matrix.package }}
    runs-on: ubuntu-latest
    needs: matrix

    if: ${{ needs.matrix.outputs.packages != '[]' }}

    strategy:
      matrix:
        package: ${{ fromJson(needs.matrix.outputs.packages) }}
      fail-fast: false

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: cachix/install-nix-action@v13
      with:
        install_url: https://nixos-nix-install-tests.cachix.org/serve/i6laym9jw3wg9mw6ncyrk6gjx4l34vvx/install
        install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
        extra_nix_config: |
          experimental-features = nix-command flakes

    - uses: cachix/cachix-action@v10
      with:
        name: internetunexplorer
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        pushFilter: '^nixexprs\.tar\.xz$'

    - run: nix build .#${{ matrix.package }} --update-input nixpkgs --print-build-logs
