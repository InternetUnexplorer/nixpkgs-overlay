commit d3077eaa9cdda4aec0e184453b7246b49a7405e1
Author: InternetUnexplorer <internetunexplorer@gmail.com>
Date:   Fri May 26 22:56:44 2023 -0700

    Support NIX_YOSYS_PLUGIN_DIRS
    
    This is the just the patch from
    https://github.com/NixOS/nixpkgs/commit/2660037f8cdf6bb69bacbf3d9d2f9f72d056c8d6,
    modified to work with
    https://github.com/YosysHQ/yosys/commit/572c8df9a86e3040d13b403976f0c23191c99d78.
    
    This version has not been tested; use it at your own risk!

diff --git a/passes/cmds/plugin.cc b/passes/cmds/plugin.cc
index 08b4aa8c4..81d8dedef 100644
--- a/passes/cmds/plugin.cc
+++ b/passes/cmds/plugin.cc
@@ -87,15 +87,32 @@ void load_plugin(std::string filename, std::vector<std::string> aliases)
 
 			// We were unable to open the file, try to do so from the plugin directory
 			if (hdl == NULL && orig_filename.find('/') == std::string::npos) {
-				hdl = dlopen([orig_filename]() {
-					std::string new_path = proc_share_dirname() + "plugins/" + orig_filename;
+				std::string install_dir = proc_share_dirname() + "plugins";
+				vector<string> all_dirs;
+				all_dirs.push_back(install_dir);
+
+				char* plugin_dirs = getenv("NIX_YOSYS_PLUGIN_DIRS");
+				if (plugin_dirs != NULL) {
+					std::string p(plugin_dirs), t;
+					std::stringstream ss(p);
+
+					while(std::getline(ss, t, ':')) {
+						all_dirs.push_back(t);
+					}
+				}
+
+				for (auto dir : all_dirs) {
+					hdl = dlopen([dir, orig_filename]() {
+						std::string new_path = dir + "/" + orig_filename;
 
-					// Check if we need to append .so
-					if (new_path.find(".so") == std::string::npos)
-						new_path.append(".so");
+						// Check if we need to append .so
+						if (new_path.find(".so") == std::string::npos)
+							new_path.append(".so");
 
-					return new_path;
-				}().c_str(), RTLD_LAZY|RTLD_LOCAL);
+						return new_path;
+					}().c_str(), RTLD_LAZY|RTLD_LOCAL);
+					if (hdl != NULL) break;
+				}
 			}
 
 			if (hdl == NULL)
